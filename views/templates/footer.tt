<% USE JSON %>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vue"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.6.0/qs.min.js"></script>
<script src="/javascripts/vue-codemirror.js"></script>
<script src="mode/javascript/javascript.js"></script>
<script>

Vue.use(window.VueCodemirror)

new Vue({
  el: '#app',
  data: {
    error: '',
    state: {
      name: <% IF name %><% name.json %><% ELSE %>''<% END %>,
      value: <% IF value %><% value.json %><% ELSE %>''<% END %>
    },
    cmOptions: {
      smartIndent: true,
      lineNumbers: true,
      lint: true,
      indentWithTabs: false,
      tabSize: 2,
      indentUnit: 2,
      autoCloseBrackets: true,
      autoCloseTags: true,
      matchTags: {
        bothTags: true
      },
      mode: <% IF format %>'text/<% format %>'<% ELSE %>'text/html'<% END %>,
      theme: 'blackboard',
      readOnly: <% IF value %>true<% ELSE %>false<% END %>
    }
  },
  methods: {
    onSave() {
      axios.post('/', Qs.stringify({
        value: this.state.value
      })).then(result => {
        this.cmOptions.readOnly = true
        this.state.name = result.data.name
        this.setURL()
      }).catch(error => {
        this.error = error
      })
    },
    onCreate() {
      this.state.value = ''
      this.state.name = ''
      this.setURL()
      this.cmOptions.readOnly = false

    },
    onDupandEdit() {
      this.state.name = ''
      this.setURL()
      this.cmOptions.readOnly = false
    },
    getTextOnly() {
      window.location.href = '/raw/' + this.state.name
    },
    setURL() {
      window.history.pushState(null, "Pastey " + this.state.name, "/" + this.state.name);
    }
  },
  computed: {
    disableSave: {
      get() {
        if (!this.state.name) return false
        return true
      }
    },
    disableNew: {
      get() {
        if (this.state.name && this.state.value) return false
        return true
      }
    },
    disableDup: {
      get() {
        if (!this.state.value || !this.state.name) return true
        return false
      }
    },
    disableRaw: {
      get() {
        if (!this.state.name) return true
        return false
      }
    }
  }
})

</script>